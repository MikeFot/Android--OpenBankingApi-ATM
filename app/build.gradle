buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.24.1'
    }
}

plugins {
    id "me.tatarka.retrolambda" version "3.7.0"
}

apply plugin: 'com.android.application'
apply plugin: 'io.fabric'



repositories {
    maven { url 'https://maven.fabric.io/public' }
}



apply from: '../buildsystem/quality/quality.gradle'
apply from: '../buildsystem/custom_tasks.gradle'
apply from: '../buildsystem/common_methods.gradle'

final def STRING = "String"
final def BOOLEAN = "boolean"
final def LONG = "long"
final def INT = "int"


final String leakCanaryVersion = "1.5.1"
final String butterKnifeVersion = "8.6.0"
final String daggerVersion = "2.11"
final String googlePlayServicesVersion = "11.0.4"

final int versionMajor = 0
final int versionMinor = 0
final int versionPatch = 1
final int androidVersionCode = 1
final String semanticVersion = "${versionMajor}.${versionMinor}.${versionPatch}"

android {
    compileSdkVersion 26
    buildToolsVersion "26.0.1"

    defaultConfig {
        applicationId "com.michaelfotiadis.ukatmdb"
        minSdkVersion 16
        targetSdkVersion 26

        versionCode androidVersionCode
        versionName semanticVersion

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        manifestPlaceholders = [fabric_key: FABRIC_KEY]

        applicationVariants.all { variant ->
            variant.productFlavors.each { flavor ->
                def generatePropertiesTask = task("fabricGenerateProperties") << {
                    Properties properties = new Properties()
                    properties.put("apiSecret", FABRIC_SECRET)
                    properties.store(new FileWriter(crashlyticsProperties), "")
                }

                def generateResourcesTask = project.tasks.getByName("fabricGenerateResources")
                generateResourcesTask.dependsOn generatePropertiesTask
                generateResourcesTask.doLast {
                    println "Removing fabric.properties"
                    crashlyticsProperties.delete()
                }
            }
        }

    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    signingConfigs {

        release {
            storeFile file(RELEASE_STORE_FILE)
            storePassword RELEASE_STORE_PASSWORD
            keyAlias RELEASE_KEY_ALIAS
            keyPassword RELEASE_KEY_PASSWORD
        }
    }

    buildTypes {

        release {
            minifyEnabled false
            debuggable false
            signingConfig signingConfigs.release
        }

        debug {

            minifyEnabled false
            debuggable true
            applicationIdSuffix ".debug"
            versionNameSuffix "-debug"
        }

    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
    }


}

dependencies {

    compile project(':network')
    compile project(':ui')

    compile "com.jakewharton:butterknife:$butterKnifeVersion"
    annotationProcessor "com.jakewharton:butterknife-compiler:$butterKnifeVersion"

    compile('com.crashlytics.sdk.android:crashlytics:2.6.8@aar') {
        transitive = true;
    }

    // dependency injection
    compile "com.google.dagger:dagger:$daggerVersion"
    annotationProcessor "com.google.dagger:dagger-compiler:$daggerVersion"

    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    compile 'com.michaelfotiadis:android-country-flags:1.0.3'

    // Alex's resource mirror
    compile 'uk.co.alt236:resource-mirror-android:1.0.0'

    compile 'io.reactivex.rxjava2:rxandroid:2.0.1'
    compile 'io.reactivex.rxjava2:rxjava:2.1.3'
    testCompile 'junit:junit:4.12'
}
